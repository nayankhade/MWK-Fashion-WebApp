package com.mwkfashion.mwk_fashion_backend.services;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.mwkfashion.mwk_fashion_backend.enums.Role;
import com.mwkfashion.mwk_fashion_backend.model.Users;
import com.mwkfashion.mwk_fashion_backend.repository.UsersRepository;

@Service
public class UsersServicesImpl implements UsersServices {

    @Autowired
    private UsersRepository usersRepository;

    @Autowired
    private AdminHandlerServiceImpl adminHandlerService;

    private static final String ADMIN_CODE = "admin@123";
    private static final String MANAGER_CODE = "manager@123";

    @Override
    public Users signUp(Users user) {
        Role role = user.getRole();
        String uniqueCode = user.getUniqueCode();

        if (role == Role.ADMIN) {
            if (!ADMIN_CODE.equals(uniqueCode)) {
                throw new IllegalArgumentException("Invalid unique code for Admin role");
            }
        } else if (role == Role.MANAGER) {
            if (!MANAGER_CODE.equals(uniqueCode)) {
                throw new IllegalArgumentException("Invalid unique code for Manager role");
            }
        } else if (role == Role.USER && (uniqueCode != null && !uniqueCode.isEmpty())) {
            throw new IllegalArgumentException("Unique code should not be provided for User role");
        }

        return usersRepository.save(user);
    }

    @Override
    public Users login(String email, String password) {
        Users user = usersRepository.findByEmail(email);
        if (user != null && user.getPassword().equals(password)) {
            return user;
        }
        return null;
    }
}
